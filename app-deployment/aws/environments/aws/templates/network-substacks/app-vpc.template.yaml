AWSTemplateFormatVersion: 2010-09-09
Description: VPC for hosting an application in a HIPAA-ready network environment
Metadata:
  Identifier:
    Value: main
  Input:
    Description: Input of all required parameters in nested stacks
  Output:
    Description: N/A
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Project configuration
      Parameters:
      - ProjectName
      - GlobalResourcePrefix
      - ResourcePrefix
    - Label:
        default: Application environment configuration
      Parameters:
      - Environment
      - EnvironmentDescription
    - Label:
        default: VPC configuration
      Parameters:
      - VPCCIDRBlock
      - PrivateSubnet1CidrBlock
      - PrivateSubnet2CidrBlock
      - PublicSubnet1CidrBlock
      - PublicSubnet2CidrBlock
      - FlowLogLogGroupRetention
      - LogGroupKeyARN
    ParameterLabels:
      ProjectName:
        default: Project name for use in resource names and tags
      GlobalResourcePrefix:
        default: Prefix for globally unique resource names like S3 buckets
      ResourcePrefix:
        default: Prefix for all resource names except globally unique names
      Environment:
        default: Environment type (short uncapitalized form for use in names), e.g. "dev" or "prod"
      EnvironmentDescription:
        default: Environment type (long capitalized form for use in descriptions), e.g. "Development" or "Production"
      VPCCIDRBlock:
        default: VPC CIDR block
      PrivateSubnet1CidrBlock:
        default: Private Subnet 1 CIDR block
      PrivateSubnet2CidrBlock:
        default: Private Subnet 2 CIDR block
      PublicSubnet1CidrBlock:
        default: Public Subnet 1 CIDR block
      PublicSubnet2CidrBlock:
        default: Public Subnet 2 CIDR block
      FlowLogLogGroupRetention:
        default: Flow logs log group retention days
      LogGroupKeyARN:
        default: KMS Key ARN for encrypting CloudWatch Log Groups
Parameters:
  ProjectName:
    Type: String
    Description: Project name for use in resource names and tags.
  GlobalResourcePrefix:
    Type: String
    Description: Prefix for globally unique resource names like S3 buckets.
  ResourcePrefix:
    Type: String
    Description: Prefix for all resource names except globally unique names.
  Environment:
    Type: String
    Description: Environment type (short uncapitalized form for use in names). E.g. "dev" or "prod."
  EnvironmentDescription:
    Type: String
    Description: Environment type (long capitalized form for use in descriptions). E.g. "Development" or "Production."
  VPCCIDRBlock:
    Type: String
    Description: VPC CIDR block.
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
  PrivateSubnet1CidrBlock:
    Type: String
    Description: Private subnet 1 CIDR block.
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
  PrivateSubnet2CidrBlock:
    Type: String
    Description: Private subnet 2 CIDR block.
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
  PublicSubnet1CidrBlock:
    Type: String
    Description: Public subnet 1 CIDR block.
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
  PublicSubnet2CidrBlock:
    Type: String
    Description: Public subnet 2 CIDR block.
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
  FlowLogLogGroupRetention:
    Type: String
    Description: Flow logs log group retention days.
  LogGroupKeyARN:
    Type: String
    Description: KMS Key ARN for encrypting CloudWatch Log Groups.
Resources:
  FlowLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub "${ResourcePrefix}${ProjectName}-${Environment}-flowlogs-loggroup"
      KmsKeyId: !Ref LogGroupKeyARN
      RetentionInDays: !Ref FlowLogLogGroupRetention
  FlowLogsRole:
    Metadata:
      cfn-lint: { config: { ignore_checks: [ EIAMPolicyWildcardResource, EIAMPolicyActionWildcard ], ignore_reasons: [ EIAMPolicyWildcardResource: "Requires full access to function", EIAMPolicyActionWildcard: "Required for proper function" ] } }
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub "${ResourcePrefix}${ProjectName}-${Environment}-flowlogs-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowFlowLogs
            Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: 'sts:AssumeRole'
      Description: !Sub "${EnvironmentDescription} flow logs role"
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                Resource: '*'
          PolicyName: !Sub "${ResourcePrefix}${ProjectName}-${Environment}-flowlogs-role-policy"
      Tags:
        - Key: Name
          Value: !Sub "${ResourcePrefix}${ProjectName}-${Environment}-flowlogs-role"
        - Key: Purpose
          Value: Networking
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCIDRBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${ResourcePrefix}${ProjectName}-${Environment}-vpc"
        - Key: Purpose
          Value: Networking
    DependsOn:
      - FlowLogGroup
  FlowLogs:
    Type: 'AWS::EC2::FlowLog'
    Properties:
      ResourceId: !Ref VPC
      ResourceType: VPC
      TrafficType: ALL
      DeliverLogsPermissionArn: !GetAtt
        - FlowLogsRole
        - Arn
      LogDestinationType: cloud-watch-logs
      LogGroupName: !Ref FlowLogGroup
      Tags:
        - Key: Name
          Value: !Sub "${ResourcePrefix}${ProjectName}-${Environment}-vpc-flowlog"
        - Key: Purpose
          Value: Networking
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !Ref PrivateSubnet1CidrBlock
      VpcId: !Ref VPC
      AvailabilityZone: us-west-2c
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ResourcePrefix}${ProjectName}-${Environment}-private-subnet-1"
        - Key: Purpose
          Value: Networking
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !Ref PrivateSubnet2CidrBlock
      VpcId: !Ref VPC
      AvailabilityZone: us-west-2b
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ResourcePrefix}${ProjectName}-${Environment}-private-subnet-2"
        - Key: Purpose
          Value: Networking
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !Ref PublicSubnet1CidrBlock
      VpcId: !Ref VPC
      AvailabilityZone: us-west-2c
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ResourcePrefix}${ProjectName}-${Environment}-public-subnet-1"
        - Key: Purpose
          Value: Networking
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !Ref PublicSubnet2CidrBlock
      VpcId: !Ref VPC
      AvailabilityZone: us-west-2b
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ResourcePrefix}${ProjectName}-${Environment}-public-subnet-2"
        - Key: Purpose
          Value: Networking
  PrivateRouteTable1:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ResourcePrefix}${ProjectName}-${Environment}-private-routetable-1"
        - Key: Purpose
          Value: Networking
  PublicRouteTable1:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ResourcePrefix}${ProjectName}-${Environment}-public-routetable-1"
        - Key: Purpose
          Value: Networking
  PrivateRouteAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1
  PrivateRouteAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet2
  PublicRouteAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable1
      SubnetId: !Ref PublicSubnet1
  PublicRouteAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable1
      SubnetId: !Ref PublicSubnet2
  IGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ResourcePrefix}${ProjectName}-${Environment}-igw"
        - Key: Purpose
          Value: Networking
  IGWAttach:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW
  IGWDefaultRoute1:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
Outputs:
  PrivateSubnet1:
    Value: !Ref PrivateSubnet1
  PrivateSubnet2:
    Value: !Ref PrivateSubnet2
  PublicSubnet1:
    Value: !Ref PublicSubnet1
  PublicSubnet2:
    Value: !Ref PublicSubnet2
  VPC:
    Value: !Ref VPC
  PrivateRouteTable1:
    Value: !Ref PrivateRouteTable1
  PublicRouteTable1:
    Value: !Ref PublicRouteTable1
  Help:
    Description: ''
    Value: ''
